I've now broken my game into several compilation units (files). Dungeon stuff (the bulk of the code in earlier drops) is in dungeon.c. main() and functions that are only useful to main() are in rlg327.c. utils.c gets the directory creation code from last time. This is nice to pull out for two reasons; the first being that it really isn't part of the game proper, and the second that it's the only system dependent code that we have (if you want to compile this on a non-POSIX OS, you'll need to port this file).

 

The new code for pathfinding is in path.c. Appropriate header files have been created to export data structures and functions as needed. The dungeon structure has two new maps of the dungeon, one for each of the two different distance metrics. It also has a PC structure, currently containing only a position. render_dungeon() checks for existence of the PC before rendering terrain. The PC is not represented as a terrain type. Many students do initially represent it that way, and even go on to represent all of the monsters as terrain in 1.04. If you give it some thought, I think you'll see why that is a poor solution.